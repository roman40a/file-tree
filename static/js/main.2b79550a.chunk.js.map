{"version":3,"sources":["components/file-tree/file-tree.module.css","components/file-tree-node/file-tree-node.module.css","App/App.module.css","components/file-tree-node/file-tree-node.model.ts","components/file-tree-node/file-tree-node.component.tsx","components/file-tree/file-tree.component.tsx","components/file-tree/file-tree.fixture.ts","App/App.tsx","index.tsx"],"names":["module","exports","NodeType","FileTreeNode","state","isOpened","handleItemClick","setState","this","props","data","outPadding","isFile","type","File","leftPadding","iconClassName","cn","css","icon","icon__opened","titleClassName","title","title__file","className","container","item","style","paddingLeft","onClick","children","map","node","i","key","React","PureComponent","FileTree","createFileClassName","createFile","createFolderClassName","createFolder","header","text","createIconsContainer","content","Folder","App","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,0BAA0B,KAAO,wBAAwB,KAAO,wBAAwB,QAAU,2BAA2B,qBAAuB,wCAAwC,WAAa,8BAA8B,aAAe,kC,gBCA1TD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,KAAO,6BAA6B,KAAO,6BAA6B,aAAe,qCAAqC,MAAQ,8BAA8B,YAAc,oCAAoC,SAAW,mC,yBCA/RD,EAAOC,QAAU,CAAC,UAAY,yB,+FCDlBC,E,qGAAAA,O,mBAAAA,I,gBAAAA,M,yBCiBCC,EAAb,2MAIaC,MAA2B,CAChCC,UAAU,GALlB,EAQIC,gBAAkB,WACd,EAAKC,UAAS,SAAAH,GAAK,MAAK,CAAEC,UAAWD,EAAMC,cATnD,wEAYc,IAAD,EACwBG,KAAKC,MAA1BC,EADH,EACGA,KAAMC,EADT,EACSA,WACNN,EAAaG,KAAKJ,MAAlBC,SACFO,EAASF,EAAKG,OAASX,EAASY,KAChCC,EAAcJ,GAAc,GAE5BK,EAAgBC,IAAGC,IAAIC,KAAL,eACnBD,IAAIE,aAAef,IAAaO,IAG/BS,EAAiBJ,IAAGC,IAAII,MAAL,eACpBJ,IAAIK,YAAcX,IAGvB,OACI,yBAAKY,UAAWN,IAAIO,WAChB,yBACID,UAAWN,IAAIQ,KACfC,MAAO,CAAEC,YAAab,GACtBc,QAASrB,KAAKF,kBAEZM,GAAU,yBAAKY,UAAWR,IAC5B,yBAAKQ,UAAWH,GAAiBX,EAAKY,QAEzCZ,EAAKoB,UAAYzB,GACd,yBAAKmB,UAAWN,IAAIY,UACfpB,EAAKoB,SAASC,KAAI,SAACC,EAAMC,GAAP,OACf,kBAAC9B,EAAD,CACI+B,IAAKD,EACLvB,KAAMsB,EACNrB,WAAYI,EArDnB,cAWzB,GAAkCoB,IAAMC,e,gBCN3BC,EAAb,iLACc,IACE3B,EAASF,KAAKC,MAAdC,KAEF4B,EAAsBrB,IAAGC,IAAIC,KAAMD,IAAIqB,YACvCC,EAAwBvB,IAAGC,IAAIC,KAAMD,IAAIuB,cAE/C,OACI,yBAAKjB,UAAWN,IAAIO,WAChB,yBAAKD,UAAWN,IAAIwB,QAChB,yBAAKlB,UAAWN,IAAIC,OACpB,yBAAKK,UAAWN,IAAIyB,MAApB,SACA,yBAAKnB,UAAWN,IAAI0B,sBAChB,yBAAKpB,UAAWc,IAChB,yBAAKd,UAAWgB,MAGxB,yBAAKhB,UAAWN,IAAI2B,SACfnC,EAAKqB,KAAI,SAAAC,GAAI,OACV,kBAAC,EAAD,CAActB,KAAMsB,aAnB5C,GAA8BG,IAAMC,eCTvB1B,EAAe,CACxB,CACIG,KAAMX,EAAS4C,OACfxB,MAAO,gBACPQ,SAAU,IAEd,CACIjB,KAAMX,EAAS4C,OACfxB,MAAO,UACPQ,SAAU,CACN,CACIjB,KAAMX,EAAS4C,OACfxB,MAAO,aACPQ,SAAU,CACN,CACIjB,KAAMX,EAASY,KACfQ,MACI,oEAMxB,CACIT,KAAMX,EAAS4C,OACfxB,MAAO,UACPQ,SAAU,CACN,CACIjB,KAAMX,EAASY,KACfQ,MAAO,oBAInB,CACIT,KAAMX,EAAS4C,OACfxB,MAAO,UACPQ,SAAU,CACN,CACIjB,KAAMX,EAASY,KACfQ,MAAO,qB,iBCnCVyB,EAAb,iLAEQ,OACI,yBAAKvB,UAAWN,IAAIO,WAChB,kBAAC,EAAD,CAAUf,KAAMA,SAJhC,GAAyByB,IAAMC,e,MCA/BY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b79550a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"file-tree_container__1qFXh\",\"header\":\"file-tree_header__3kziy\",\"icon\":\"file-tree_icon__5ntK1\",\"text\":\"file-tree_text__3gAaZ\",\"content\":\"file-tree_content__1Pnsc\",\"createIconsContainer\":\"file-tree_createIconsContainer__1DcHi\",\"createFile\":\"file-tree_createFile___c5Pl\",\"createFolder\":\"file-tree_createFolder__2nL_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"file-tree-node_container__y_z_8\",\"item\":\"file-tree-node_item__1qmQu\",\"icon\":\"file-tree-node_icon__3Zvm0\",\"icon__opened\":\"file-tree-node_icon__opened__ZtAEv\",\"title\":\"file-tree-node_title__38XN3\",\"title__file\":\"file-tree-node_title__file__3BQ2V\",\"children\":\"file-tree-node_children__3JB3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___P6pN\"};","export enum NodeType {\n    Folder,\n    File,\n}\n\nexport type Node = File | Folder;\n\nexport type File = {\n    type: NodeType.File;\n    title: string;\n    children?: undefined;\n};\n\nexport type Folder = {\n    type: NodeType.Folder;\n    title: string;\n    children?: Node[];\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Node, NodeType } from './file-tree-node.model';\n\nimport css from './file-tree-node.module.css';\n\nconst CHILDREN_PADDING = 20;\n\nexport type FileTreeNodeProps = {\n    data: Node;\n    outPadding?: number;\n};\n\ntype FileTreeNodeState = {\n    isOpened: boolean;\n};\n\nexport class FileTreeNode extends React.PureComponent<\n    FileTreeNodeProps,\n    FileTreeNodeState\n> {\n    readonly state: FileTreeNodeState = {\n        isOpened: false,\n    };\n\n    handleItemClick = () => {\n        this.setState(state => ({ isOpened: !state.isOpened }));\n    };\n\n    render() {\n        const { data, outPadding } = this.props;\n        const { isOpened } = this.state;\n        const isFile = data.type === NodeType.File;\n        const leftPadding = outPadding || 10;\n\n        const iconClassName = cn(css.icon, {\n            [css.icon__opened]: isOpened && !isFile,\n        });\n\n        const titleClassName = cn(css.title, {\n            [css.title__file]: isFile,\n        });\n\n        return (\n            <div className={css.container}>\n                <div\n                    className={css.item}\n                    style={{ paddingLeft: leftPadding }}\n                    onClick={this.handleItemClick}\n                >\n                    {!isFile && <div className={iconClassName} />}\n                    <div className={titleClassName}>{data.title}</div>\n                </div>\n                {data.children && isOpened && (\n                    <div className={css.children}>\n                        {data.children.map((node, i) => (\n                            <FileTreeNode\n                                key={i}\n                                data={node}\n                                outPadding={leftPadding + CHILDREN_PADDING}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Node } from '../file-tree-node/file-tree-node.model';\nimport { FileTreeNode } from '../file-tree-node/file-tree-node.component';\n\nimport css from './file-tree.module.css';\n\nexport type FileTreeProps = {\n    data: Node[];\n};\n\nexport class FileTree extends React.PureComponent<FileTreeProps> {\n    render() {\n        const { data } = this.props;\n\n        const createFileClassName = cn(css.icon, css.createFile);\n        const createFolderClassName = cn(css.icon, css.createFolder);\n\n        return (\n            <div className={css.container}>\n                <div className={css.header}>\n                    <div className={css.icon} />\n                    <div className={css.text}>Files</div>\n                    <div className={css.createIconsContainer}>\n                        <div className={createFileClassName} />\n                        <div className={createFolderClassName} />\n                    </div>\n                </div>\n                <div className={css.content}>\n                    {data.map(node => (\n                        <FileTreeNode data={node} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","import { Node, NodeType } from '../file-tree-node/file-tree-node.model';\n\nexport const data: Node[] = [\n    {\n        type: NodeType.Folder,\n        title: 'closed_folder',\n        children: [],\n    },\n    {\n        type: NodeType.Folder,\n        title: 'folder1',\n        children: [\n            {\n                type: NodeType.Folder,\n                title: 'sub_folder',\n                children: [\n                    {\n                        type: NodeType.File,\n                        title:\n                            'activeFileshdgfjashgdfjhasgdjfhagsdjhfgasjdhfgjsahdgfjhs.txt',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        type: NodeType.Folder,\n        title: 'folder2',\n        children: [\n            {\n                type: NodeType.File,\n                title: 'addwindow.html',\n            },\n        ],\n    },\n    {\n        type: NodeType.Folder,\n        title: 'folder3',\n        children: [\n            {\n                type: NodeType.File,\n                title: 'addwindow.html',\n            },\n        ],\n    },\n];\n","import React from 'react';\nimport { FileTree } from '../components/file-tree/file-tree.component';\nimport { data } from '../components/file-tree/file-tree.fixture';\n\nimport css from './App.module.css';\n\nexport class App extends React.PureComponent {\n    render() {\n        return (\n            <div className={css.container}>\n                <FileTree data={data} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}